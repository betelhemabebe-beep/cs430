{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\betty\\\\Downloads\\\\trumanclub\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\";\n// src/components/ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode'; // Change this line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children,\n  role\n}) {\n  const token = localStorage.getItem('token');\n  const isAuthorized = () => {\n    if (!token) return false;\n    try {\n      const decoded = jwtDecode(token); // Use jwtDecode here instead of jwt_decode\n      return decoded.role === role;\n    } catch (err) {\n      return false;\n    }\n  };\n  return isAuthorized() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 38\n  }, this);\n}\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","role","token","localStorage","getItem","isAuthorized","decoded","err","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/betty/Downloads/trumanclub/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["// src/components/ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode'; // Change this line\r\n\r\nfunction ProtectedRoute({ children, role }) {\r\n  const token = localStorage.getItem('token');\r\n\r\n  const isAuthorized = () => {\r\n    if (!token) return false;\r\n    try {\r\n      const decoded = jwtDecode(token); // Use jwtDecode here instead of jwt_decode\r\n      return decoded.role === role;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return isAuthorized() ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,QAAQ,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAC1C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACH,KAAK,EAAE,OAAO,KAAK;IACxB,IAAI;MACF,MAAMI,OAAO,GAAGV,SAAS,CAACM,KAAK,CAAC,CAAC,CAAC;MAClC,OAAOI,OAAO,CAACL,IAAI,KAAKA,IAAI;IAC9B,CAAC,CAAC,OAAOM,GAAG,EAAE;MACZ,OAAO,KAAK;IACd;EACF,CAAC;EAED,OAAOF,YAAY,CAAC,CAAC,GAAGL,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACa,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7D;AAACC,EAAA,GAdQd,cAAc;AAgBvB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}